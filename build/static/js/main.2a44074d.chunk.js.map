{"version":3,"sources":["Components/phonebook.js","Components/listContact.js","Components/filterContacts.js","App.js","index.js"],"names":["Phonebook","state","name","number","onChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","onSubmit","this","type","pattern","title","required","React","Component","ListContact","contacts","onRemoveContact","map","contact","className","onClick","id","FilterContacts","onChangeFilter","App","filter","addContact","task","cont","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a44074d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass Phonebook extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.onChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.onChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\nPhonebook.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListContact = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map((contact) => (\r\n      <li key={contact.id}>\r\n        {contact.name + \":\" + contact.number}\r\n        {\r\n          <button\r\n            className ='button_delete'\r\n            type=\"button\"\r\n            name=\"delete\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nListContact.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default ListContact;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FilterContacts({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilterContacts.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport CssModule from \"./index.css\";\nimport ContactForm from \"./Components/phonebook.js\";\nimport ContactList from \"./Components/listContact\";\nimport Filter from \"./Components/filterContacts\";\n\nexport default class App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        {visibleContacts.length && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}