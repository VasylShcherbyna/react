{"version":3,"sources":["Componnent/ContactForm.js","Componnent/ListContact.js","Componnent/Filtr.js","App.js","Redux/Store.js","index.js"],"names":["ContactForm","onAddContact","useState","name","setName","number","setNumber","reset","onSubmit","evt","preventDefault","type","pattern","title","required","value","onChange","e","currentTarget","ListContact","contacts","onRemoveContact","map","contact","className","onClick","id","console","log","FilterContacts","onChangeFilter","target","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","toLowerCase","getVisibleContacts","includes","task","taskNameNormalized","find","length","alert","shortid","prevState","contactId","store","createStore","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAIe,SAASA,EAAT,GAAwC,IAAjBC,EAAgB,EAAhBA,aACpC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAeMC,EAAQ,WACZH,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAME,SAba,SAAAC,GACnBA,EAAIC,iBAEJT,EAAa,CAAEE,OAAME,WAErBE,KAQA,UACE,4DAEE,uBACEI,KAAK,OACLR,KAAK,OACLS,QAAQ,yHACRC,MAAM,iEACNC,UAAQ,EACRC,MAAOZ,EACPa,SA7BiB,SAAAC,GACvBb,EAAQa,EAAEC,cAAcH,aA+BtB,kDAEE,uBACEJ,KAAK,MACLR,KAAK,SACLU,MAAM,kFACNC,UAAQ,EACRC,MAAOV,EACPW,SArCmB,SAAAC,GACzBX,EAAUW,EAAEC,cAAcH,aAuCxB,wBAAQJ,KAAK,SAAb,wCChDN,IAAMQ,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,6BACGD,EAASE,KAAI,SAAAC,GAAO,OACnB,+BACGA,EAAQpB,KAAO,IAAMoB,EAAQlB,OAE5B,wBACEmB,UAAU,gBACVb,KAAK,SACLR,KAAK,SACLsB,QAAS,kBAAMJ,EAAgBE,EAAQG,KAJzC,6CAHKH,EAAQG,UAgBvBC,QAAQC,IAAIT,EAAYC,UAYTD,QC/BA,SAASU,EAAT,GAAoD,IAA1Bd,EAAyB,EAAzBA,MAAOe,EAAkB,EAAlBA,eAC9C,OACE,iEAEE,uBACEnB,KAAK,OACLI,MAAOA,EACPC,SAAU,SAAAC,GAAC,OAAIa,EAAeb,EAAEc,OAAOhB,aCuDhCiB,MAzDf,WAAgB,IAAD,EACb,EAAgC9B,mBAAQ,UACtC+B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBADD,QACiB,IADzD,mBAAOjB,EAAP,KAAiBkB,EAAjB,KAGA,EAA4BpC,mBAAS,IAArC,mBAAOqC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRN,OAAOC,aAAaM,QAAQ,WAAYT,KAAKU,UAAUvB,MACtD,CAACA,IAuBoBmB,EAAOK,cArB/B,IAsBMC,EAAqBzB,EAASmB,QAAO,SAAAhB,GAAO,OAChDA,EAAQpB,KAAKyC,cAAcE,SAASP,EAAOK,kBAO7C,OACE,gCACE,sDACA,cAAC5C,EAAD,CAAaC,aAjCE,SAAA8C,GACjB,IAAMC,EAAqBD,EAAK5C,KAAKyC,cACdxB,EAAS6B,MAC9B,SAAA1B,GAAO,OAAIA,EAAQpB,KAAKyC,gBAAkBI,KAG5C,GAAyB,IAArBD,EAAK5C,KAAK+C,OACZC,MAAM,GAAD,OAAIJ,EAAK5C,KAAT,mDACA,CACL,IAAMoB,EAAO,2BACRwB,GADQ,IAEXrB,GAAI0B,QAGNd,GAAY,SAAAe,GAAS,4BAAQA,GAAR,CAAmB9B,WAqBxC,8CACA,cAAC,EAAD,CAAQR,MAAOwB,EAAQT,eAnBN,SAAAS,GACnBC,EAAUD,MAmBPM,GACC,cAAC,EAAD,CACEzB,SAAUyB,EACVxB,gBAdc,SAAAiC,GACpBhB,EAAYlB,EAASmB,QAAO,qBAAGb,KAAgB4B,a,QCzC7CC,EAAQC,aAFE,eAACC,EAAD,uDAAS,GAAT,OAAwBA,KAIzBF,I,QCAf5B,QAAQC,IAAI2B,GAEZG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAASA,EAAnB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.af259284.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactForm({ onAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    onAddContact({ name, number });\r\n\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Dane do faktury klienta\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Data can only contain letters, apostrophes, dashes and spaces.\"\r\n          required\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Numer faktury\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          title=\"The number must consist of numbers and may contain spaces, dashes, parentheses \"\r\n          required\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Dodać fakturę</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListContact = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map(contact => (\r\n      <li key={contact.id}>\r\n        {contact.name + ':' + contact.number}\r\n        {\r\n          <button\r\n            className=\"button_delete\"\r\n            type=\"button\"\r\n            name=\"delete\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            Usunąć fakturę\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nconsole.log(ListContact.contacts);\r\n\r\nListContact.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default ListContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FilterContacts({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      Znaleźć fakturę\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilterContacts.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport shortid from 'shortid';\r\nimport CssModule from './IndexModule.css';\r\n\r\nimport ContactForm from './Componnent/ContactForm';\r\nimport ContactList from './Componnent/ListContact';\r\nimport Filter from './Componnent/Filtr';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(window.localStorage.getItem('contacts')) ?? [],\r\n  );\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = task => {\r\n    const taskNameNormalized = task.name.toLowerCase();\r\n    const searchSameName = contacts.find(\r\n      contact => contact.name.toLowerCase() === taskNameNormalized,\r\n    );\r\n\r\n    if (task.name.length === 0) {\r\n      alert(`${task.name} Pola muszą być wypełnione!`);\r\n    } else {\r\n      const contact = {\r\n        ...task,\r\n        id: shortid(),\r\n      };\r\n\r\n      setContacts(prevState => [...prevState, contact]);\r\n    }\r\n  };\r\n  const changeFilter = filter => {\r\n    setFilter(filter);\r\n  };\r\n\r\n  const normalizeFilter = filter.toLowerCase();\r\n  const getVisibleContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  const removeContact = contactId => {\r\n    setContacts(contacts.filter(({ id }) => id !== contactId));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1> WYSTAWIENIE FAKTURY</h1>\r\n      <ContactForm onAddContact={addContact} />\r\n\r\n      <h2>LISTA FAKTUR</h2>\r\n      <Filter value={filter} onChangeFilter={changeFilter} />\r\n      {getVisibleContacts && (\r\n        <ContactList\r\n          contacts={getVisibleContacts}\r\n          onRemoveContact={removeContact}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore } from 'redux';\r\n\r\nconst reducer = (state = {}, action) => state;\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './Redux/Store';\r\nimport { Provider } from 'react-redux';\r\n\r\nconsole.log(store);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n"],"sourceRoot":""}